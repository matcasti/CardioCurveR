[{"path":[]},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to CardioCurveR","title":"Contributing to CardioCurveR","text":"outlines propose change CardioCurveR. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to CardioCurveR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to CardioCurveR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to CardioCurveR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"matcasti/CardioCurveR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to CardioCurveR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to CardioCurveR","text":"Please note CardioCurveR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 CardioCurveR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with CardioCurveR","title":"Getting help with CardioCurveR","text":"Thanks using CardioCurveR! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with CardioCurveR","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with CardioCurveR","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with CardioCurveR","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://matcasti.github.io/CardioCurveR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matías Castillo-Aguilar. Author, maintainer.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Castillo-Aguilar M (2025). CardioCurveR: Nonlinear Modeling R-R Interval Dynamics. R package version 0.0.0.9000, https://matcasti.github.io/CardioCurveR/, https://github.com/matcasti/CardioCurveR.","code":"@Manual{,   title = {CardioCurveR: Nonlinear Modeling of R-R Interval Dynamics},   author = {Matías Castillo-Aguilar},   year = {2025},   note = {R package version 0.0.0.9000, https://matcasti.github.io/CardioCurveR/},   url = {https://github.com/matcasti/CardioCurveR}, }"},{"path":[]},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"cardiocurver-nonlinear-modeling-of-r-r-interval-dynamics-1","dir":"","previous_headings":"","what":"CardioCurveR: Nonlinear Modeling of R-R Interval Dynamics","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"CardioCurveR provides automated robust framework modeling RR interval (RRi) signals. package built around dual-logistic model, described Castillo-Aguilar et al. (2025), captures rapid drop RRi exercise subsequent recovery phase. formulation, model defined following equation: RRi(t)=α+β1+eλ(t−τ)−cβ1+eϕ(t−τ−δ), RRi(t) = \\alpha + \\frac{\\beta}{1 + e^{\\lambda\\ (t-\\tau)}} -          \\frac{c\\,\\beta}{1 + e^{\\phi\\ (t-\\tau-\\delta)}}, α\\alpha represents baseline RRi level, β\\beta controls amplitude drop, λ\\lambda modulates steepness drop phase, τ\\tau time center drop, cc scales recovery amplitude relative β\\beta, ϕ\\phi controls steepness recovery phase, δ\\delta shifts recovery phase time relative drop. CardioCurveR also incorporates advanced signal filtering techniques using zero-phase Butterworth filter preprocess RRi data remove edge artifacts. ensures dynamic fluctuations preserved subsequent non-linear modeling.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"install development version CardioCurveR, run following commands R. Make sure devtools package installed:","code":"if (!requireNamespace(\"devtools\", quietly = TRUE)) {   install.packages(\"devtools\") }  devtools::install_github(\"matcasti/CardioCurveR\")"},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"core-functions","dir":"","previous_headings":"","what":"Core Functions","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"package provides several key functions:","code":""},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"dual-logistic-model-dual_logistic","dir":"","previous_headings":"Core Functions","what":"Dual-Logistic Model: dual_logistic()","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"function implements dual-logistic model Castillo-Aguilar et al. (2025): RRi(t)=α+β1+eλ(t−τ)−cβ1+eϕ(t−τ−δ) RRi(t) = \\alpha + \\frac{\\beta}{1 + e^{\\lambda (t-\\tau)}} - \\frac{c\\,\\beta}{1 + e^{\\phi (t-\\tau-\\delta)}} takes vector time points named vector (list) parameters, returning modeled RRi values.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"parameter-estimation-estimate_rri_curve","dir":"","previous_headings":"Core Functions","what":"Parameter Estimation: estimate_RRi_curve()","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"function optimizes dual-logistic model parameters using robust Huber loss function. optimization performed via optim() function box constraints (default method \"L-BFGS-B\"). designed yield reliable parameter estimates even presence noisy data.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"signal-filtering-filter_signal","dir":"","previous_headings":"Core Functions","what":"Signal Filtering: filter_signal()","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"function applies Butterworth low-pass filter using zero-phase filtering (filtfilt()) clean RRi signal. mitigate edge effects filtering, trims specified number samples beginning end filtered signal.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"adaptive-outlier-cleaning-clean_outlier","dir":"","previous_headings":"Core Functions","what":"Adaptive Outlier Cleaning: clean_outlier()","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"clean_outlier() function removes ectopic noisy beats RRi signal. fits LOESS model capture local trends, calculates residuals, flags outliers based robust threshold (multiples median absolute deviation). Outliers replaced one three methods: drawing Gaussian uniform distribution, simply replacing LOESS-predicted values.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/index.html","id":"example-workflow","dir":"","previous_headings":"","what":"Example Workflow","title":"Nonlinear Modeling of R-R Interval Dynamics","text":"extended example demonstrates full workflow simulating, filtering, visualizing, fitting RRi signal model.     example demonstrates multiple steps. First, theoretical RRi signal computed dual-logistic model. Next, noisy version signal simulated cleaned using Butterworth low-pass filter. noisy signal used estimate dual-logistic model parameters robust optimization procedure. Visualizations provided theoretical curve, noisy versus filtered signals, fitted model overlay, residuals fit, offering comprehensive insight stage process. Enjoy exploring RR interval dynamics modeling robustly CardioCurveR!","code":"library(CardioCurveR)  # Simulate a time vector and a theoretical RRi signal using the dual-logistic model. set.seed(123) time_vec <- seq(0, 20, by = 0.01)  # Define the true model parameters from Castillo-Aguilar et al. (2025) true_params <- list(alpha = 800, beta = -375, c = 0.85,                      lambda = -3, phi = -2,                      tau = 6, delta = 3)  # Compute the theoretical RRi curve using dual_logistic() RRi_theoretical <- dual_logistic(time_vec, true_params)  # Visualize the theoretical model plot(time_vec, RRi_theoretical, type = \"l\", col = \"blue\", lwd = 2,      main = \"Theoretical Dual-Logistic RRi Model\",      xlab = \"Time (s)\", ylab = \"RR Interval (ms)\", axes = FALSE) axis(1);axis(2) # Simulate a noisy RRi signal by adding Gaussian noise RRi_simulated <- RRi_theoretical + rnorm(length(time_vec), sd = 35)  # Apply the Butterworth low-pass filter to the noisy RRi signal RRi_filtered <- filter_signal(RRi_simulated, n = 3, W = 0.5, abs = 5)  # Plot the simulated signal and its filtered version plot(time_vec, RRi_simulated, type = \"l\", col = \"red\", lwd = 1,      main = \"Simulated (Red) vs. Filtered (Blue) RRi Signal\",      xlab = \"Time (s)\", ylab = \"RR Interval (ms)\", axes = FALSE) axis(1);axis(2) lines(time_vec, RRi_filtered, col = \"blue\", lwd = 2) # Estimate the dual-logistic model parameters from the noisy RRi signal fit_summary <- estimate_RRi_curve(time = time_vec, RRi = RRi_simulated) print(fit_summary) #> $method #> [1] \"L-BFGS-B\" #>  #> $parameters #>        alpha         beta            c       lambda          phi          tau  #>  800.5394360 -371.2615984    0.8513614   -3.1655726   -1.9580225    5.9710957  #>        delta  #>    3.0396702  #>  #> $objective_value #> [1] 1158735 #>  #> $convergence #> [1] 0  # Overlay the fitted model on the simulated data fitted_RRi <- dual_logistic(time_vec, fit_summary$parameters) plot(time_vec, RRi_simulated, type = \"l\", col = \"grey\", lwd = 1,      main = \"Simulated RRi Signal with Fitted Model\",      xlab = \"Time (s)\", ylab = \"RR Interval (ms)\", axes = FALSE) axis(1);axis(2) lines(time_vec, fitted_RRi, col = \"red\", lwd = 2) # For additional insight, plot the residuals from the fitted model residuals <- RRi_simulated - fitted_RRi plot(time_vec, residuals, type = \"l\", col = \"purple\",      main = \"Residuals of the Fitted Dual-Logistic Model\",      xlab = \"Time (s)\", ylab = \"Residual (ms)\", axes = FALSE) axis(1);axis(2) abline(h = 0, lty = 2)"},{"path":"https://matcasti.github.io/CardioCurveR/reference/CardioCurveR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CardioCurveR: Nonlinear Modeling of R-R Interval Dynamics — CardioCurveR-package","title":"CardioCurveR: Nonlinear Modeling of R-R Interval Dynamics — CardioCurveR-package","text":"CardioCurveR provides automated robust framework analyzing R-R interval (RRi) signals using advanced nonlinear modeling preprocessing techniques. package implements dual-logistic model capture rapid drop subsequent recovery RRi exercise, described Castillo-Aguilar et al. (2025). addition, CardioCurveR includes tools filtering RRi signals using zero-phase Butterworth low-pass filtering cleaning ectopic beats via adaptive outlier replacement using local regression robust statistics. integrated methods preserve dynamic features RRi signals facilitate accurate cardiovascular monitoring clinical research.","code":""},{"path":[]},{"path":"https://matcasti.github.io/CardioCurveR/reference/CardioCurveR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CardioCurveR: Nonlinear Modeling of R-R Interval Dynamics — CardioCurveR-package","text":"Maintainer: Matías Castillo-Aguilar m99castillo@gmail.com (ORCID)","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/CardioCurveR.html","id":null,"dir":"Reference","previous_headings":"","what":"CardioCurveR: Nonlinear Modeling and Preprocessing of R-R Interval Dynamics — CardioCurveR","title":"CardioCurveR: Nonlinear Modeling and Preprocessing of R-R Interval Dynamics — CardioCurveR","text":"CardioCurveR provides automated robust framework analyzing R-R interval (RRi) signals using advanced nonlinear modeling preprocessing techniques. package implements dual-logistic model capture rapid drop RRi exercise subsequent recovery phase, following methodology described Castillo-Aguilar et al. (2025):","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/CardioCurveR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CardioCurveR: Nonlinear Modeling and Preprocessing of R-R Interval Dynamics — CardioCurveR","text":"$$ RRi(t) = \\alpha + \\frac{\\beta}{1 + e^{\\lambda (t-\\tau)}} - \\frac{c\\,\\beta}{1 + e^{\\phi (t-\\tau-\\delta)}} $$ model, \\(\\alpha\\) denotes baseline RRi, \\(\\beta\\) controls amplitude drop, \\(\\lambda\\) \\(\\tau\\) modulate drop phase, \\(c\\), \\(\\phi\\), \\(\\delta\\) govern recovery dynamics. addition parameter estimation, CardioCurveR offers state---art signal preprocessing tools: CardioCurveR cleans RRi signals applying zero-phase Butterworth low-pass filtering remove high-frequency noise preserving signal phase. employs adaptive outlier replacement, using local regression (LOESS) robust statistics, identify correct ectopic beats without \"chopping\" dynamic signal features. methods ensure intrinsic dynamics RRi signals maintained, supporting accurate cardiovascular monitoring facilitating clinical research.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/clean_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean RR-Interval Signal Using Local Smoothing and Adaptive Outlier Replacement — clean_outlier","title":"Clean RR-Interval Signal Using Local Smoothing and Adaptive Outlier Replacement — clean_outlier","text":"function cleans RR-interval (RRi) signal identifying ectopic noisy beats using robust, locally adaptive approach. context cardiovascular monitoring (applying Castillo-Aguilar et al. (2025) non-linear model), function first fits local regression (LOESS) RRi signal function time, computes residuals, identifies ectopic beats residuals exceeding multiple median absolute deviation.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/clean_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean RR-Interval Signal Using Local Smoothing and Adaptive Outlier Replacement — clean_outlier","text":"","code":"clean_outlier(   time,   signal,   loess_span = 0.25,   threshold = 2,   replace = c(\"gaussian\", \"uniform\", \"loess\"),   seed = 123 )"},{"path":"https://matcasti.github.io/CardioCurveR/reference/clean_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean RR-Interval Signal Using Local Smoothing and Adaptive Outlier Replacement — clean_outlier","text":"time numeric vector time points corresponding RRi recordings. signal numeric vector RR interval (RRi) values. loess_span numeric value controlling span LOESS fit (default 0.25). Smaller values yield local fit. threshold numeric multiplier (default 2) median absolute deviation (MAD) determine cutoff flagging ectopic beats. replace character string specifying replacement method ectopic beats. Must one \"gaussian\", \"uniform\", \"loess\" (default \"gaussian\"). seed integer set random seed reproducibility replacement process (default 123).","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/clean_outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean RR-Interval Signal Using Local Smoothing and Adaptive Outlier Replacement — clean_outlier","text":"data.frame containing original time values cleaned RRi signal.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/clean_outlier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean RR-Interval Signal Using Local Smoothing and Adaptive Outlier Replacement — clean_outlier","text":"function offers several replacement strategies outliers: \"gaussian\" Replace ectopic values random draws normal distribution, centered LOESS-predicted value standard deviation equal robust MAD. \"uniform\" Replace ectopic values random draws uniform distribution, bounded LOESS-predicted value ± MAD. \"loess\" Simply replace ectopic values LOESS-predicted values. adaptive approach ensures dynamic changes RRi signal—observed exercise—preserved, ectopic spurious beats corrected without \"chopping\" data.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/clean_outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean RR-Interval Signal Using Local Smoothing and Adaptive Outlier Replacement — clean_outlier","text":"","code":"if (FALSE) { # \\dontrun{ # Simulate an RRi signal with dynamic behavior and ectopic beats: set.seed(123) n <- 1000 time_vec <- seq(0, 20, length.out = n) signal <- 1000 - 400 / (1 + exp(-3 * (time_vec - 6))) + 300 / (1 + exp(-2 * (time_vec - 10))) + rnorm(n, sd = 50) # Introduce ectopic beats (5% of total signal) noise_points <- sample.int(n, floor(n*0.05)) signal[noise_points] <- signal[noise_points] * runif(25, 0.25, 2.00)  # Clean the signal using the default Gaussian replacement strategy clean_df <- clean_outlier(time = time_vec, signal = signal,                          loess_span = 0.25, threshold = 2,                          replace = \"gaussian\", seed = 123)  plot(time_vec, signal, main = \"Original vs Cleaned R-R interval Signal\",      xlab = \"Time (min)\", ylab = \"RRi (ms)\", type = \"l\", axes = FALSE) axis(1); axis(2) lines(clean_df, col = \"red2\") } # }"},{"path":"https://matcasti.github.io/CardioCurveR/reference/dual_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","title":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","text":"function implements dual-logistic model capture dynamic behavior RR intervals (RRi) exercise recovery, described Castillo-Aguilar et al. (2025). model designed account rapid drop subsequent recovery RRi values combining two logistic functions. formulation allows robust characterization non-linear fluctuations RRi signals, critical accurate cardiovascular monitoring analysis.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/dual_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","text":"","code":"dual_logistic(t, params)"},{"path":"https://matcasti.github.io/CardioCurveR/reference/dual_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","text":"t numeric vector time points. params named numeric vector parameters, must include: alpha baseline RRi level. beta amplitude parameter drop phase. lambda rate parameter controlling steepness drop. tau time center drop phase. c scaling factor recovery phase. phi rate parameter controlling steepness recovery. delta time offset recovery phase relative tau.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/dual_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","text":"numeric vector containing modeled RRi values times specified t.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/dual_logistic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","text":"model defined : $$ RRi(t) = \\alpha + \\frac{\\beta}{1 + \\exp\\{\\lambda (t-\\tau)\\}} - \\frac{c \\, \\beta}{1 + \\exp\\{\\phi (t-\\tau-\\delta)\\}}, $$ : \\(\\alpha\\) baseline RRi level. \\(\\beta\\) controls amplitude drop phase. \\(\\lambda\\) controls steepness drop phase. \\(\\tau\\) defines time drop centered. \\(c\\) scales amplitude recovery phase relative \\(\\beta\\). \\(\\phi\\) controls steepness recovery phase. \\(\\delta\\) shifts recovery phase time relative drop phase. dual-logistic model defined following approach described Castillo-Aguilar et al. (2025), specifically tailored RRi signal analysis contexts exercise-induced changes recovery dynamics interest. model combines two logistic functions—one representing drop RRi one representing recovery—allowing accurate fit even presence non-linear fluctuations. Attribution Castillo-Aguilar et al. (2025) provided recognize original methodology inspired implementation.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/dual_logistic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","text":"Castillo-Aguilar, et al. (2025). Enhancing Cardiovascular Monitoring: Non-linear Model Characterizing RR Interval Fluctuations Exercise Recovery. Scientific Reports, 15(1), 8628.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/dual_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — dual_logistic","text":"","code":"# Define example parameters based on Castillo-Aguilar et al. (2025) params <- list(alpha = 1000, beta = -380, lambda = -3, tau = 6,             c = 0.85, phi = -2, delta = 3)  # Simulate a time vector t <- seq(0, 20, length.out = 150)  # Compute the dual-logistic model values RRi_model <- dual_logistic(t, params)  # Plot the resulting model plot(t, RRi_model, type = \"l\", col = \"blue\",      main = \"Dual-Logistic RRi Model (Castillo-Aguilar et al.)\",      xlab = \"Time\", ylab = \"RR Interval (ms)\")"},{"path":"https://matcasti.github.io/CardioCurveR/reference/estimate_RRi_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","title":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","text":"function estimates parameters dual-logistic model applied RR interval (RRi) signals. model designed capture rapid drop subsequent recovery RRi values exercise recovery periods, described Castillo-Aguilar et al. (2025). robust Huber loss function (default \\(\\delta\\) 50 ms) used downweight influence outliers, ensuring optimization process robust even presence noisy ectopic beats.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/estimate_RRi_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","text":"","code":"estimate_RRi_curve(   time,   RRi,   start_params = c(alpha = 800, beta = -380, c = 0.85, lambda = -3, phi = -2, tau = 6,     delta = 3),   method = \"L-BFGS-B\" )"},{"path":"https://matcasti.github.io/CardioCurveR/reference/estimate_RRi_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","text":"time numeric vector time points. RRi numeric vector RR interval values. start_params named numeric vector initial parameter estimates. Default c(alpha = 800, beta = -380, c = 0.85, lambda = -3, phi = -2, tau = 6, delta = 3). method character string specifying optimization method use optim(). default \"L-BFGS-B\", allows parameter constraints.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/estimate_RRi_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","text":"list containing: method optimization method used. parameters estimated parameters model. objective_value final value objective (Huber loss) function. convergence integer code indicating convergence (0 indicates success).","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/estimate_RRi_curve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","text":"dual-logistic model, described Castillo-Aguilar et al. (2025), defined : $$ \\text{RRi}(t) = \\alpha + \\frac{\\beta}{1 + e^{\\lambda (t - \\tau)}} - \\frac{c \\, \\beta}{1 + e^{\\phi (t - \\tau - \\delta)}} $$ : \\(\\alpha\\) baseline RRi level. \\(\\beta\\) controls amplitude drop. \\(\\lambda\\) modulates steepness drop phase. \\(\\tau\\) represents time drop centered. \\(c\\) scales amplitude recovery relative \\(\\beta\\). \\(\\phi\\) controls steepness recovery phase. \\(\\delta\\) shifts recovery phase time relative \\(\\tau\\). function first cleans input data removing missing cases, defines dual-logistic model, objective function based Huber loss (default \\(\\delta\\) = 50 ms). parameter optimization performed using optim() box constraints (via L-BFGS-B) ensure parameters remain within physiologically plausible limits. default lower upper bounds set based typical RRi signal ranges.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/estimate_RRi_curve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","text":"Castillo-Aguilar, et al. (2025). Enhancing Cardiovascular Monitoring: Non-linear Model Characterizing RR Interval Fluctuations Exercise Recovery. Scientific Reports, 15(1), 8628.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/estimate_RRi_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate RRi Curve Using a Dual-Logistic Model for RR Interval Dynamics (Castillo-Aguilar et al.) — estimate_RRi_curve","text":"","code":"if (FALSE) { # \\dontrun{   # Simulate an example RRi signal:   set.seed(123)   time_vec <- seq(0, 20, by = 0.01)   true_params <- c(alpha = 1000, beta = -380, c = 0.85,                    lambda = -3, phi = -2, tau = 6, delta = 3)   RRi_simulated <- dual_logistic(time_vec, true_params) +                     rnorm(length(time_vec), sd = 30)    # Estimate the model parameters:   fit <- estimate_RRi_curve(time = time_vec, RRi = RRi_simulated)   print(fit)    plot(time_vec, RRi_simulated, type = \"l\", xlab = \"Time (min)\", ylab = \"RRi (ms)\",        main = \"Signal and fitted RRi Non-Linear Model\")   lines(time_vec, dual_logistic(time_vec, fit$parameters), col = \"red\", lwd = 2) } # }"},{"path":"https://matcasti.github.io/CardioCurveR/reference/filter_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","title":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","text":"function cleans RR interval (RRi) signal applying Butterworth low-pass filter using zero-phase filtering (via filtfilt signal package) trimming edges filtered signal remove potential artifacts. approach particularly useful preprocessing RRi data context cardiovascular monitoring non-linear modeling (see Castillo-Aguilar et al. 2025).","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/filter_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","text":"","code":"filter_signal(x, n = 3, W = 0.5, abs = 5)"},{"path":"https://matcasti.github.io/CardioCurveR/reference/filter_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","text":"x numeric vector representing RRi signal filtered. n integer specifying filter order Butterworth filter. Default 3. W numeric value (0 1) specifying normalized critical frequency low-pass filter. Default 0.5. abs integer indicating number samples beginning end filtered signal trimmed (set NA) remove edge artifacts. Default 5.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/filter_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","text":"numeric vector length x containing denoised RRi signal, first last abs values set NA.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/filter_signal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","text":"filtering step performed Butterworth filter order n critical frequency W, W normalized relative Nyquist frequency (.e. value 0 1). avoid edge artifacts produced filtering, function sets first last abs samples NA. function part CardioCurveR package, designed facilitate robust analysis RR interval fluctuations. Filtering performed using zero-phase forward reverse digital filter (filtfilt) ensure phase signal preserved. trim sub-function sets first last abs samples NA mitigate impact filter transients. steps crucial preparing RRi signals non-linear modeling, dual-logistic model described Castillo-Aguilar et al. (2025).","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/filter_signal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","text":"Castillo-Aguilar, et al. (2025). Enhancing Cardiovascular Monitoring: Non-linear Model Characterizing RR Interval Fluctuations Exercise Recovery. Scientific Reports, 15(1), 8628.","code":""},{"path":"https://matcasti.github.io/CardioCurveR/reference/filter_signal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-Pass Filter for RR Interval Signals with Edge Trimming — filter_signal","text":"","code":"if (FALSE) { # \\dontrun{   # Example: Simulate a noisy RRi signal   set.seed(123)   time <- seq(0, 60, length.out = 150)   # Simulated RRi signal (in ms) with added noise   RRi <- 1000 + sin(seq(0, 2*pi, length.out = 150)) * 50 + rnorm(150, sd = 10)    # Clean the signal using the default settings   RRi_clean <- filter_signal(x = RRi, n = 3, W = 0.5, abs = 5)    # Plot the original and filtered signals   plot(time, RRi, type = \"l\", col = \"red\",        main = \"Original (red) vs. Filtered RRi Signal\",        xlab = \"Time (s)\", ylab = \"RR Interval (ms)\")   lines(time, RRi_clean, type = \"l\", col = \"blue\") } # }"}]
